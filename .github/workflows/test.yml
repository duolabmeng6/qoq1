name: 发布软件

on:
  #push: # 代码推送到main分支自动触发工作流
  #  branches:
  #    - main
  workflow_dispatch: # 手动触发

permissions: write-all # 给所有工作写权限

jobs:
  jobs_window:
    name: 构建window软件
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: 读入环境信息
        run: |
          # 模拟写出一个 exe
            mkdir -p ./dist
            echo "hello world" > ./dist/hello.exe

      - name: Install UPX
        run: |
          # 下载 UPX 的 Windows 二进制文件
          Invoke-WebRequest -Uri https://github.com/upx/upx/releases/download/v3.96/upx-3.96-win64.zip -OutFile upx.zip

          # 解压 UPX
          Expand-Archive -Path upx.zip -DestinationPath C:\upx

          # 将 UPX 添加到系统 PATH 中
          [System.Environment]::SetEnvironmentVariable("PATH", "$env:PATH;C:\upx", [System.EnvironmentVariableTarget]::Machine)

          # 验证 UPX 安装
          upx --version
        shell: PowerShell

    - name: Compress Files
      run: |
        # 在这里使用 UPX 压缩你的文件，例如：upx your_executable.exe
        upx your_executable.exe
      shell: PowerShell


      - name: 上传产物
        uses: actions/upload-artifact@v3
        with:
          name: window
          path: ./dist/*.exe
  jobs4:
    needs: [ jobs_window ]
    name: 发布版本
    runs-on: ubuntu-latest
    env:
      INPUT_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
      YOUR_GITHUB_REPOSITORY: duolabmeng6/qoq2
      UP_FILE_DIR: ./window/*.exe,./macos/*.zip
    steps:
      - uses: actions/checkout@v3
      - name: 编译环境设置 Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"
      - name: 下载依赖文件
        run: |
          pip install PyGithub
      - name: 下载产物
        id: download
        uses: actions/download-artifact@v3
        with:
          path: ./
      - name: 读入环境信息
        run: |
          echo ${{steps.download.outputs.download-path}}
          ls -R
      - name: 上传文件
        run: |
          python github_action_upfile.py
